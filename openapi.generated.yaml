# WARNING: This file is generated. Do not edit it directly.
# To make changes, edit the root `openapi.base.yaml` or `tools/*/openapi.yaml` files.
openapi: 3.1.0
info:
  title: Pair Programmer with Self-Modification
  description: >
    The Pair Programmer is a plugin that enables ChatGPT to collaborate with
    users in a pair programming manner. This plugin grants ChatGPT the
    capability to manage projects and execute terminal commands.


    A unique feature of this plugin is the "system" tool, which provides ChatGPT
    access to the plugin's own source code. This access allows ChatGPT to view,
    interpret, and even modify the plugin's code, enabling it to adapt and
    extend its functionalities based on user needs.


    If a user's goals or tasks aren't addressed by the current toolset, ChatGPT
    can leverage this access to introduce new features or adjust existing ones.
    This adaptability ensures that ChatGPT can evolve in real-time, enhancing
    its assistance in coding and project management tasks.


    The Pair Programmer not only augments the interaction between ChatGPT and
    the user but also empowers ChatGPT with self-modification capabilities,
    ensuring a tailored and efficient collaboration.
  version: v1
servers:
  - url: http://localhost:5004
paths:
  /projects:
    get:
      summary: Retrieve the list of projects
      description: |
        Fetches the list of projects. The list is an array of project names.
      operationId: getProjects
      tags:
        - Projects
    post:
      summary: Create a new project
      description: |
        Creates a new project in the users file system with the given name.
      operationId: createProject
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the new project to create.
                  example: new-project
    delete:
      summary: Delete an existing project
      description: |
        Deletes an existing project with the given name.
      operationId: deleteProject
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project to delete.
                  example: existing-project
  /projects/active:
    get:
      summary: Retrieve the active project
      description: |
        Fetches the name of the currently active project.
      operationId: getActiveProject
      tags:
        - Projects
    post:
      summary: Set the active project
      description: |
        Sets the currently active project with the given name.
      operationId: setActiveProject
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the project to set as active.
                  example: new-active-project
  /projects/active/tree:
    get:
      summary: Get the project tree
      description: |
        Retrieves a tree structure of the active project.
      operationId: getProjectTree
  /projects/active/exec:
    post:
      summary: Execute a shell command in the active project
      description: >
        The command is executed in the currently active project.

        Do not execute commands are long-running or require input.

        Only execute commands that are expected to complete in a short amount of
        time.
      operationId: execProjectCommand
      requestBody:
        description: The command to execute in the active project
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  required: true
                  type: string
                  description: The system command to execute
                  example: echo 'export default 42' >> answer.js
                gitCommitMessage:
                  required: false
                  type: string
                  description: >
                    If this command causes changes to the file system, this
                    message will be used as the commit message.
                  example: 'feat(answer.js): Append export default 42'
  /system/docs/architecture:
    get:
      summary: Fetch the architecture document
      description: Returns the content of the architecture.md file.
      operationId: getArchitectureDocument
  /system/exec:
    post:
      summary: Execute a system command
      description: >
        The command is executed in the root of this API project, outside the
        scope of projects.

        Do not execute commands are long-running or require input.

        Only execute commands that are expected to complete in a short amount of
        time.
      operationId: execSystemCommand
      requestBody:
        description: The command to execute and the directory to execute it in
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  description: The system command to execute
                  example: echo 'export default 42' >> answer.js
                cwd:
                  type: string
                  description: The path of the directory to execute the command in
                  example: /path/to/directory
                  required: true
  /system/info:
    get:
      summary: Retrieve System Information
      description: >
        Fetches various system details such as the current working directory,
        system architecture, platform, and versions of various tools like Git,
        Node.js, and Yarn.
      operationId: getSystemInfo
  /system/tree:
    get:
      summary: Get the system tree
      description: |
        Retrieves a tree structure of the file system.
      operationId: getSystemTree
